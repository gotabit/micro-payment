{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "add_payment_chan"
      ],
      "properties": {
        "add_payment_chan": {
          "type": "object",
          "required": [
            "chan_key",
            "channels"
          ],
          "properties": {
            "chan_key": {
              "type": "string"
            },
            "channels": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Channel"
              }
            },
            "operator": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "close_payment_chan"
      ],
      "properties": {
        "close_payment_chan": {
          "type": "object",
          "required": [
            "chan_key",
            "channels"
          ],
          "properties": {
            "chan_key": {
              "type": "string"
            },
            "channels": {
              "type": "array",
              "items": {
                "type": "array",
                "items": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0.0
                    }
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_signer"
      ],
      "properties": {
        "add_signer": {
          "type": "object",
          "required": [
            "chan_key",
            "recipient_key",
            "signers"
          ],
          "properties": {
            "chan_key": {
              "type": "string"
            },
            "recipient_key": {
              "type": "string"
            },
            "signers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cashing"
      ],
      "properties": {
        "cashing": {
          "type": "object",
          "required": [
            "cheques",
            "recipient_key"
          ],
          "properties": {
            "cheques": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentCheque"
              }
            },
            "recipient_key": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Change the admin",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "auto_release_time": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "max_recipient": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "This accepts a properly-encoded ReceiveMsg from a cw20 contract",
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "Channel": {
      "type": "object",
      "required": [
        "approve_signers",
        "key",
        "max_amount"
      ],
      "properties": {
        "approve_signers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "face_value": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint128",
          "minimum": 0.0
        },
        "key": {
          "type": "string"
        },
        "max_amount": {
          "type": "integer",
          "format": "uint128",
          "minimum": 0.0
        }
      }
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PaymentCheque": {
      "type": "object",
      "required": [
        "recipient_commitment",
        "recipient_key",
        "sender_commitment",
        "sender_key",
        "seq"
      ],
      "properties": {
        "recipient_commitment": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "recipient_key": {
          "type": "string"
        },
        "sender_commitment": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        },
        "sender_key": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "value": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint128",
          "minimum": 0.0
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
